{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ducky-0-version.js","src/ducky-1-util.js","src/ducky-2-registry-1-data.js","src/ducky-2-registry-2-api.js","src/ducky-3-select-1-compile.js","src/ducky-3-select-2-execute.js","src/ducky-3-select-3-api.js","src/ducky-4-validate-1-tokenize.js","src/ducky-4-validate-2-parse.js","src/ducky-4-validate-3-execute.js","src/ducky-4-validate-4-api.js","src/ducky-5-params.js","src/ducky-6-options.js","src/ducky.js"],"names":["version","major","minor","micro","date","Token","_classCallCheck","this","name","text","tokens","pos","len","b1","b2","e2","e1","symbol","push","offset","Error","ctx","width","tok","context","substr","k","length","Math","floor","i","str","k1","k2","replace","registry","std_types","global","_ducky2Registry1Data","require","register","type","arguments","unregister","registered","select_compile","spec","path","m","txt","match","select_execute","obj","_typeof","value_old","value_new","undefined","Array","splice","parseInt","_ducky3Select1Compile","_ducky3Select2Execute","select_cache","select","value","compile","apply","execute","_ducky1Util","validate_tokenize","token","setName","setText","b","addToken","validate_parse","parse","ast","parse_spec","peek","parse_not","parse_group","parse_hash","parse_array","parse_regexp","parse_primary","parse_any","parse_class","consume","op","op1","op2","elements","key","parse_key","arity","parse_arity","element","skip","regexp","RegExp","ex","message","primary","any","clazz","charset","Number","MAX_VALUE","indexOf","c","_ducky2Registry2Api","errCtx","msg","validate_execute","exec_spec","node","errors","valid","exec_not","exec_or","exec_hash","exec_array","exec_regexp","exec_primary","exec_class","err","forEach","e","_ref","_ref2","_slicedToArray","err1","err2","valid1","valid2","el","fields","field","hasAnyKeys","Object","hasOwnProperty","call","propertyIsEnumerable","sep","found","test","toString","prototype","_ducky4Validate1Tokenize","_ducky4Validate2Parse","_ducky4Validate3Execute","validate_cache","validate","_ducky4Validate4Api","params_is_name_based","args","name_based","params_check_validity","func","param","what","JSON","stringify","params","def","req","positional","required","pos2name","rest","_ducky3Select3Api","options","input","output","prepare","val","join","out","concat","initially","merge","_this","info","defineProperty","configurable","enumerable","writable","_ducky0Version","_ducky5Params","_ducky6Options","module","exports"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 2: false */\n/* global 6: false */\n/* global 0: false */\n/* global 20170618:  false */\n\n/*  API version  */\nvar version = {\n    major: 2,\n    minor: 6,\n    micro: 0,\n    date:  20170618\n}\n\nexport { version }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  custom Token class  */\nclass Token {\n    constructor () {\n        this.name   = \"\"\n        this.text   = \"\"\n        this.tokens = []\n        this.pos    = 0\n        this.len    = 0\n    }\n\n    /*  setter for caller context name  */\n    setName (name) {\n        this.name = name\n    }\n\n    /*  setter for plain-text input  */\n    setText (text) {\n        this.text = text\n    }\n\n    /*  setter for additional token symbols  */\n    addToken (b1, b2, e2, e1, symbol) {\n        this.tokens.push({ b1: b1, b2: b2, e2: e2, e1: e1, symbol: symbol })\n        this.len++\n    }\n\n    /*  peek at the next token or token at particular offset  */\n    peek (offset) {\n        if (typeof offset === \"undefined\")\n            offset = 0\n        if (offset >= this.len)\n            throw new Error(`${this.name}: parse error: not enough tokens`)\n        return this.tokens[this.pos + offset].symbol\n    }\n\n    /*  skip one or more tokens  */\n    skip (len) {\n        if (typeof len === \"undefined\")\n            len = 1\n        if (len > this.len)\n            throw new Error(`${this.name}: parse error: not enough tokens available to skip: ${this.ctx()}`)\n        this.pos += len\n        this.len -= len\n    }\n\n    /*  consume the current token (by expecting it to be a particular symbol)  */\n    consume (symbol) {\n        if (this.len <= 0)\n            throw new Error(`${this.name}: parse error: no more tokens available to consume: ${this.ctx()}`)\n        if (this.tokens[this.pos].symbol !== symbol)\n            throw new Error(`${this.name}: parse error: expected token symbol \"${symbol}\": ${this.ctx()}`)\n        this.pos++\n        this.len--\n    }\n\n    /*  return a textual description of the token parsing context  */\n    ctx (width) {\n        if (typeof width === \"undefined\")\n            width = 78\n        let tok = this.tokens[this.pos]\n\n        /*  the current token itself  */\n        let context = \"<\" + this.text.substr(tok.b2, tok.e2 - tok.b2 + 1) + \">\"\n        context = this.text.substr(tok.b1, tok.b2 - tok.b1) + context\n        context = context + this.text.substr(tok.e2 + 1, tok.e1 - tok.e2)\n\n        /*  the previous and following token(s)  */\n        let k = (width - context.length)\n        if (k > 0) {\n            k = Math.floor(k / 2)\n            let i, str\n            if (this.pos > 0) {\n                /*  previous token(s)  */\n                let k1 = 0\n                for (i = this.pos - 1; i >= 0; i--) {\n                    tok = this.tokens[i]\n                    str = this.text.substr(tok.b1, tok.e1 - tok.b1 + 1)\n                    k1 += str.length\n                    if (k1 > k)\n                        break\n                    context = str + context\n                }\n                if (i > 0)\n                    context = \"[...]\" + context\n            }\n            if (this.len > 1) {\n                /*  following token(s)  */\n                let k2 = 0\n                for (i = this.pos + 1; i < this.pos + this.len; i++) {\n                    tok = this.tokens[i]\n                    str = this.text.substr(tok.b1, tok.e1 - tok.b1 + 1)\n                    k2 += str.length\n                    if (k2 > k)\n                        break\n                    context = context + str\n                }\n                if (i < this.pos + this.len)\n                    context = context + \"[...]\"\n            }\n        }\n\n        /*  place everything on a single line through escape sequences  */\n        context = context.replace(/\\r/, \"\\\\r\")\n            .replace(/\\n/, \"\\\\n\")\n            .replace(/\\t/, \"\\\\t\")\n        return context\n    }\n}\n\nexport { Token }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  internal type registry  */\nvar registry = {}\n\n/*  pre-fill type registry with JavaScript standard types  */\nlet std_types = [\n    \"Object\",  \"Boolean\", \"Number\",  \"String\",  \"Function\",\n    \"RegExp\",  \"Array\",   \"Date\",    \"Error\",\n    \"Set\",     \"Map\",     \"WeakMap\", \"Promise\", \"Proxy\", \"Iterator\"\n]\n\n/* global global: false */\nfor (let i = 0; i < std_types.length; i++)\n    if (typeof global[std_types[i]] === \"function\")\n        registry[std_types[i]] = global[std_types[i]]\n\nexport { registry }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { registry } from \"./ducky-2-registry-1-data.js\"\n\n/*  API function: register a type under a name  */\nvar register = function (name, type) {\n    /*  sanity check arguments  */\n    if (arguments.length !== 2)\n        throw new Error(`register: invalid number of arguments: ${arguments.length} (exactly 2 expected)`)\n    if (typeof name !== \"string\")\n        throw new Error(`register: invalid name argument: \"${name}\" (string expected)`)\n    if (typeof type !== \"function\")\n        throw new Error(`register: invalid type argument: \"${type}\" (function object expected)`)\n    if (typeof registry[name] !== \"undefined\")\n        throw new Error(`register: type already registered under name: \"${name}\"`)\n\n    /*  add type to registry  */\n    registry[name] = type\n}\n\n/*  API function: unregister a type under a name  */\nvar unregister = function (name) {\n    /*  sanity check arguments  */\n    if (arguments.length !== 1)\n        throw new Error(`unregister: invalid number of arguments: ${arguments.length} (exactly 1 expected)`)\n    if (typeof name !== \"string\")\n        throw new Error(`unregister: invalid name argument: \"${name}\" (string expected)`)\n    if (typeof registry[name] === \"undefined\")\n        throw new Error(`unregister: no type registered under name: \"${name}\"`)\n\n    /*  delete type from registry  */\n    delete registry[name]\n}\n\n/*  API function: check for registered type under a name  */\nvar registered = function (name) {\n    /*  sanity check arguments  */\n    if (arguments.length !== 1)\n        throw new Error(`registered: invalid number of arguments: ${arguments.length} (exactly 1 expected)`)\n    if (typeof name !== \"string\")\n        throw new Error(`registered: invalid name argument: \"${name}\" (string expected)`)\n    return registry[name]\n}\n\nexport { registered, register, unregister }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar select_compile = function (spec) {\n    /*  result and state variables  */\n    let path = []\n    let pos = 0\n\n    /*  iterate over selection specification  */\n    let m\n    let txt = spec\n    while (txt !== \"\") {\n        /*  case 1: standard path segment  */\n        if ((m = txt.match(/^\\s*(?:\\.)?\\s*([a-zA-Z$0-9_][a-zA-Z$0-9_:-]*)/)) !== null)\n            path.push(m[1])\n        /*  case 2: numerical array-style dereference  */\n        else if ((m = txt.match(/^\\s*\\[\\s*(\\d+|\\*{1,2})\\s*\\]/)) !== null)\n            path.push(m[1])\n        /*  case 3: double-quoted string array-style dereference  */\n        else if ((m = txt.match(/^\\s*\\[\\s*\"((?:\\\\\"|.)*?)\"\\s*\\]/)) !== null)\n            path.push(m[1].replace(/\\\\\"/g, \"\\\"\"))\n        /*  case 4: single-quoted string array-style dereference  */\n        else if ((m = txt.match(/^\\s*\\[\\s*'((?:\\\\'|.)*?)'\\s*\\]/)) !== null)\n            path.push(m[1].replace(/\\\\'/g, \"'\"))\n        /*  skip all whitespaces between segments  */\n        else if ((m = txt.match(/^\\s+$/)) !== null)\n            break\n        else\n            throw new Error(\"select: parse error: invalid character at: \" +\n                spec.substr(0, pos) + \"<\" + txt.substr(0, 1) + \">\" + txt.substr(1))\n\n        /*  advance parsing position  */\n        pos += m[0].length\n        txt = txt.substr(m[0].length)\n    }\n\n    return path\n}\n\nexport { select_compile }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  execute object selection  */\nvar select_execute = function (obj, path) {\n    /*  handle special case of empty path */\n    if (path.length === 0) {\n        if (arguments.length === 3)\n            throw new Error(\"select: cannot set value on empty path\")\n        else\n            return obj\n    }\n\n    /*  step into object graph according to path prefix  */\n    let i = 0\n    while (i < path.length - 1) {\n        if (typeof obj !== \"object\")\n            throw new Error(\"select: cannot further dereference: no more intermediate objects in path\")\n        obj = obj[path[i++]]\n    }\n\n    /*  get the old value  */\n    if (typeof obj !== \"object\")\n        throw new Error(\"select: cannot further dereference: no object at end of path\")\n    let value_old = obj[path[i]]\n\n    /*  optionally set new value  */\n    if (arguments.length === 3) {\n        let value_new = arguments[2]\n        if (value_new === undefined) {\n            /*  delete value from collection  */\n            if (obj instanceof Array)\n                obj.splice(parseInt(path[i], 10), 1)\n            else\n                delete obj[path[i]]\n        }\n        else\n            /*  set value into collection  */\n            obj[path[i]] = value_new\n    }\n\n    return value_old\n}\n\nexport { select_execute }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { select_compile } from \"./ducky-3-select-1-compile.js\"\nimport { select_execute } from \"./ducky-3-select-2-execute.js\"\n\n/*  the internal compile cache  */\nlet select_cache = {}\n\n/*  API function: select an arbitrary value via a path specification\n    and either get the current value or set the new value  */\nvar select = function (obj, spec, value) {\n    /*  sanity check arguments  */\n    if (arguments.length < 2)\n        throw new Error(`select: invalid number of arguments: ${arguments.length} (minimum of 2 expected)`)\n    else if (arguments.length > 3)\n        throw new Error(`select: invalid number of arguments: ${arguments.length} (maximum of 3 expected)`)\n    if (typeof spec !== \"string\")\n        throw new Error(`select: invalid specification argument: \"${spec}\" (string expected)`)\n\n    /*  compile select path from specification\n        or reuse cached pre-compiled selection path  */\n    let path = select_cache[spec]\n    if (typeof path === \"undefined\") {\n        path = select_compile(spec)\n        select_cache[spec] = path\n    }\n\n    /*  execute the object selection  */\n    return (\n          arguments.length === 2\n        ? select_execute(obj, path)\n        : select_execute(obj, path, value)\n    )\n}\n\n/*  compile a path specification into array of dereferencing steps  */\nselect.compile = function (spec) {\n    /*  sanity check argument  */\n    if (arguments.length !== 1)\n        throw new Error(`select: invalid number of arguments: ${arguments.length} (exactly 1 expected)`)\n    if (typeof spec !== \"string\")\n        throw new Error(`select: invalid specification argument: \"${spec}\" (string expected)`)\n    return select_compile.apply(undefined, arguments)\n}\n\n/*  execute object selection  */\nselect.execute = function (obj, path) {\n    /*  sanity check arguments  */\n    if (arguments.length < 2)\n        throw new Error(`select: invalid number of arguments: ${arguments.length} (minimum of 2 expected)`)\n    else if (arguments.length > 3)\n        throw new Error(`select: invalid number of arguments: ${arguments.length} (maximum of 3 expected)`)\n    if (!(typeof path === \"object\" && path instanceof Array))\n        throw new Error(`select: invalid path argument: \"${path}\" (array expected)`)\n    return select_execute.apply(undefined, arguments)\n}\n\nexport { select }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { Token } from \"./ducky-1-util.js\"\n\n/*  tokenize the validation specification  */\nvar validate_tokenize = function (spec) {\n    /*  create new Token abstraction  */\n    var token = new Token()\n    token.setName(\"validate\")\n    token.setText(spec)\n\n    /*  determine individual token symbols  */\n    let m\n    let b = 0\n    while (spec !== \"\") {\n        m = spec.match(/^(\\s*)([^{}\\[\\]:,?*+()!|/\\s]+|[{}\\[\\]:,?*+()!|/])(\\s*)/)\n        if (m === null)\n            throw new Error(`validate: parse error: cannot further canonicalize: \"${spec}\"`)\n        token.addToken(\n            b,\n            b + m[1].length,\n            b + m[1].length + m[2].length - 1,\n            b + m[0].length - 1,\n            m[2]\n        )\n        spec = spec.substr(m[0].length)\n        b += m[0].length\n    }\n    token.addToken(b, b, b, b, null)\n    return token\n}\n\nexport { validate_tokenize }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  parse specification  */\nvar validate_parse = {\n    parse (token) {\n        if (token.len <= 0)\n            return null\n        let ast = this.parse_spec(token)\n        let symbol = token.peek()\n        if (symbol !== null)\n            throw new Error(`validate: parse error: unexpected token (expected end-of-string): \"${token.ctx()}\"`)\n        return ast\n    },\n\n    /*  parse a specification  */\n    parse_spec (token) {\n        if (token.len <= 0)\n            return null\n        let ast\n        let symbol = token.peek()\n        if (symbol === \"!\")\n            ast = this.parse_not(token)\n        else if (symbol === \"(\")\n            ast = this.parse_group(token)\n        else if (symbol === \"{\")\n            ast = this.parse_hash(token)\n        else if (symbol === \"[\")\n            ast = this.parse_array(token)\n        else if (symbol === \"/\")\n            ast = this.parse_regexp(token)\n        else if (symbol.match(/^(?:null|undefined|boolean|number|string|function|object)$/))\n            ast = this.parse_primary(token)\n        else if (symbol === \"any\")\n            ast = this.parse_any(token)\n        else if (symbol.match(/^[_a-zA-Z$][_a-zA-Z$0-9]*(?:\\.[_a-zA-Z$][_a-zA-Z$0-9]*)*$/))\n            ast = this.parse_class(token)\n        else\n            throw new Error(`validate: parse error: invalid token symbol: \"${token.ctx()}\"`)\n        return ast\n    },\n\n    /*  parse boolean \"not\" operation  */\n    parse_not (token) {\n        token.consume(\"!\")\n        let ast = this.parse_spec(token) /*  RECURSION  */\n        ast = { type: \"not\", op: ast }\n        return ast\n    },\n\n    /*  parse group (for boolean \"or\" operation)  */\n    parse_group (token) {\n        token.consume(\"(\")\n        let ast = this.parse_spec(token)\n        while (token.peek() === \"|\") {\n            token.consume(\"|\")\n            let child = this.parse_spec(token) /*  RECURSION  */\n            ast = { type: \"or\", op1: ast, op2: child }\n        }\n        token.consume(\")\")\n        return ast\n    },\n\n    /*  parse hash type specification  */\n    parse_hash (token) {\n        token.consume(\"{\")\n        let elements = []\n        while (token.peek() !== \"}\") {\n            let key = this.parse_key(token)\n            let arity = this.parse_arity(token, \"?\")\n            token.consume(\":\")\n            let spec = this.parse_spec(token)  /*  RECURSION  */\n            elements.push({ type: \"element\", key: key, arity: arity, element: spec })\n            if (token.peek() === \",\")\n                token.skip()\n            else\n                break\n        }\n        let ast = { type: \"hash\", elements: elements }\n        token.consume(\"}\")\n        return ast\n    },\n\n    /*  parse array type specification  */\n    parse_array (token) {\n        token.consume(\"[\")\n        let elements = []\n        while (token.peek() !== \"]\") {\n            var spec = this.parse_spec(token)  /*  RECURSION  */\n            var arity = this.parse_arity(token, \"?*+\")\n            elements.push({ type: \"element\", element: spec, arity: arity })\n            if (token.peek() === \",\")\n                token.skip()\n            else\n                break\n        }\n        let ast = { type: \"array\", elements: elements }\n        token.consume(\"]\")\n        return ast\n    },\n\n    /*  parse regular expression specification  */\n    parse_regexp (token) {\n        token.consume(\"/\")\n        let text = \"\"\n        while (token.len >= 1) {\n            if (token.peek(0) === \"/\")\n                break\n            else if (token.len >= 2 && token.peek(0) === \"\\\\\" && token.peek(1) === \"/\") {\n                text += token.peek(1)\n                token.skip(2)\n            }\n            else {\n                text += token.peek(0)\n                token.skip(1)\n            }\n        }\n        token.consume(\"/\")\n        let regexp\n        try { regexp = new RegExp(text) }\n        catch (ex) {\n            throw new Error(`validate: parse error: invalid regular expression \"${text}\": ${ex.message}`)\n        }\n        let ast = { type: \"regexp\", regexp: regexp }\n        return ast\n    },\n\n    /*  parse primary type specification  */\n    parse_primary (token) {\n        let primary = token.peek()\n        if (!primary.match(/^(?:null|undefined|boolean|number|string|function|object)$/))\n            throw new Error(`validate: parse error: invalid primary type \"${primary}\"`)\n        token.skip()\n        return { type: \"primary\", name: primary }\n    },\n\n    /*  parse special \"any\" type specification  */\n    parse_any (token) {\n        let any = token.peek()\n        if (any !== \"any\")\n            throw new Error(`validate: parse error: invalid any type \"${any}\"`)\n        token.skip()\n        return { type: \"any\" }\n    },\n\n    /*  parse JavaScript class specification  */\n    parse_class (token) {\n        let clazz = token.peek()\n        if (!clazz.match(/^[_a-zA-Z$][_a-zA-Z$0-9]*(?:\\.[_a-zA-Z$][_a-zA-Z$0-9]*)*$/))\n            throw new Error(`validate: parse error: invalid class type \"${clazz}\"`)\n        token.skip()\n        return { type: \"class\", name: clazz }\n    },\n\n    /*  parse arity specification  */\n    parse_arity (token, charset) {\n        let arity = [ 1, 1 ]\n        if (   token.len >= 5\n            && token.peek(0) === \"{\"\n            && token.peek(1).match(/^[0-9]+$/)\n            && token.peek(2) === \",\"\n            && token.peek(3).match(/^(?:[0-9]+|oo)$/)\n            && token.peek(4) === \"}\"          ) {\n            arity = [\n                parseInt(token.peek(1), 10),\n                (  token.peek(3) === \"oo\"\n                 ? Number.MAX_VALUE\n                 : parseInt(token.peek(3), 10))\n            ]\n            token.skip(5)\n        }\n        else if (   token.len >= 3\n                 && token.peek(0) === \"{\"\n                 && token.peek(1).match(/^[0-9]+$/)\n                 && token.peek(2) === \"}\"          ) {\n            arity = [\n                parseInt(token.peek(1), 10),\n                parseInt(token.peek(1), 10)\n            ]\n            token.skip(3)\n        }\n        else if (\n               token.len >= 1\n            && token.peek().length === 1\n            && charset.indexOf(token.peek()) >= 0) {\n            let c = token.peek()\n            switch (c) {\n                case \"?\": arity = [ 0, 1 ];                break\n                case \"*\": arity = [ 0, Number.MAX_VALUE ]; break\n                case \"+\": arity = [ 1, Number.MAX_VALUE ]; break\n            }\n            token.skip()\n        }\n        return arity\n    },\n\n    /*  parse hash key specification  */\n    parse_key (token) {\n        var key = token.peek()\n        if (!key.match(/^(?:[_a-zA-Z$][_a-zA-Z$0-9]*|@)$/))\n            throw new Error(`validate: parse error: invalid key \"${key}\"`)\n        token.skip()\n        return key\n    }\n}\n\nexport { validate_parse }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { registered } from \"./ducky-2-registry-2-api.js\"\n\n/*  provide a reasonable context information for error messages  */\nvar errCtx = (path, msg) => {\n    if (path === \"\")\n        return `mismatch at root-level: ${msg}`\n    else\n        return `mismatch at path \"${path}\": ${msg}`\n}\n\nvar validate_execute = {\n    /*  validate specification (top-level)  */\n    exec_spec (value, node, path, errors) {\n        let valid = false\n        if (node !== null) {\n            switch (node.type) {\n                case \"not\":     valid = this.exec_not(    value, node, path, errors); break\n                case \"or\":      valid = this.exec_or(     value, node, path, errors); break\n                case \"hash\":    valid = this.exec_hash(   value, node, path, errors); break\n                case \"array\":   valid = this.exec_array(  value, node, path, errors); break\n                case \"regexp\":  valid = this.exec_regexp( value, node, path, errors); break\n                case \"primary\": valid = this.exec_primary(value, node, path, errors); break\n                case \"class\":   valid = this.exec_class(  value, node, path, errors); break\n                case \"any\":     valid = true;                                         break\n                default:\n                    throw new Error(`validate: invalid validation AST: node has unknown type \"${node.type}\"`)\n            }\n        }\n        return valid\n    },\n\n    /*  validate through boolean \"not\" operation  */\n    exec_not (value, node, path, errors) {\n        let err = errors !== null ? [] : null\n        let valid = this.exec_spec(value, node.op, path, err)  /*  RECURSION  */\n        valid = !valid\n        if (!valid && errors !== null)\n            err.forEach((e) => errors.push(e))\n        return valid\n    },\n\n    /*  validate through boolean \"or\" operation  */\n    exec_or (value, node, path, errors) {\n        let [ err1, err2 ] = errors !== null ? [ [], [] ] : [ null, null ]\n        let valid1 = this.exec_spec(value, node.op1, path, err1)  /*  RECURSION  */\n        let valid2 = this.exec_spec(value, node.op2, path, err2)  /*  RECURSION  */\n        let valid = valid1 || valid2\n        if (!valid && errors !== null) {\n            err1.forEach((e) => errors.push(e))\n            err2.forEach((e) => errors.push(e))\n        }\n        return valid\n    },\n\n    /*  validate hash type  */\n    exec_hash (value, node, path, errors) {\n        let i, el\n        let valid = (typeof value === \"object\" && value !== null)\n        let fields = {}\n        let field\n        if (!valid && errors !== null) {\n            if (value === null)\n                errors.push(`mismatch at path \"${path}\": found \"null\", expected hash`)\n            else\n                errors.push(`mismatch at path \"${path}\": found type \"${typeof value}\", expected hash`)\n        }\n        else if (valid) {\n            /*  pass 1: ensure that all mandatory fields exist\n                and determine map of valid fields for pass 2  */\n            let hasAnyKeys = false\n            for (field in value) {\n                if (   !Object.hasOwnProperty.call(value, field)\n                    || !Object.propertyIsEnumerable.call(value, field)\n                    || field === \"constructor\"\n                    || field === \"prototype\"                          )\n                    continue\n                hasAnyKeys = true\n                break\n            }\n            for (i = 0; i < node.elements.length; i++) {\n                el = node.elements[i]\n                fields[el.key] = el.element\n                if (   el.arity[0] > 0\n                    && (   (el.key === \"@\" && !hasAnyKeys)\n                        || (el.key !== \"@\" && typeof value[el.key] === \"undefined\"))) {\n                    valid = false\n                    if (errors !== null) {\n                        if (el.key === \"@\")\n                            errors.push(errCtx(path, \"mandatory element under arbitrary key not found\"))\n                        else\n                            errors.push(errCtx(path, `mandatory element under key \"${el.key}\" not found`))\n                    }\n                    else\n                        break\n                }\n            }\n        }\n        if (valid || errors !== null) {\n            /*  pass 2: ensure that no unknown fields exist\n                and that all existing fields are valid  */\n            let sep = (path !== \"\" ? \".\" : \"\")\n            for (field in value) {\n                if (   !Object.hasOwnProperty.call(value, field)\n                    || !Object.propertyIsEnumerable.call(value, field)\n                    || field === \"constructor\"\n                    || field === \"prototype\"                          )\n                    continue\n                if (   typeof fields[field] === \"undefined\"\n                    && typeof fields[\"@\"]   === \"undefined\"\n                    && errors !== null                     )\n                    errors.push(errCtx(path, `element under key \"${field}\" unexpected`))\n                if (   typeof fields[field] !== \"undefined\"\n                    && this.exec_spec(value[field], fields[field], `${path}${sep}${field}`, errors)) /*  RECURSION  */\n                    continue\n                if (   typeof fields[\"@\"] !== \"undefined\"\n                    && this.exec_spec(value[field], fields[\"@\"], `${path}${sep}${field}`, errors)) /*  RECURSION  */\n                    continue\n                valid = false\n                if (errors === null)\n                    break\n            }\n        }\n        return valid\n    },\n\n    /*  validate array type  */\n    exec_array (value, node, path, errors) {\n        let i, el\n        let valid = (typeof value === \"object\" && value instanceof Array)\n        if (!valid && errors !== null)\n            errors.push(errCtx(path, `found type \"${typeof value}\", expected array`))\n        else if (valid) {\n            let pos = 0\n            let err = null\n\n            /*  iterate over all AST nodes  */\n            for (i = 0; i < node.elements.length; i++) {\n                el = node.elements[i]\n                let found = 0\n                err = errors !== null ? [] : null\n\n                /*  iterate over remaining value elements\n                    - as long as the maximum value is not still reached and\n                    - as long as there are still elements available\n                    - as long as the elements are still valid  */\n                while (found < el.arity[1] && pos < value.length) {\n                    if (!this.exec_spec(value[pos], el.element, `${path}[${pos}]`, err))  /*  RECURSION  */\n                        break\n                    found++\n                    pos++\n                }\n                if (found < el.arity[0]) {\n                    if (errors !== null)\n                        errors.push(errCtx(`${path}[${pos}]`,\n                            `found only ${found} elements of array element type #${i}, ` +\n                            `expected at least ${el.arity[0]} elements`))\n                    valid = false\n                    break\n                }\n            }\n\n            /*  if last AST node matched not successfully, report its errors  */\n            if (!valid && err !== null && err.length > 0) {\n                if (errors !== null)\n                    err.forEach((e) => errors.push(e))\n            }\n\n            /*  in case more elements are available without matching nodes  */\n            else if (pos < value.length) {\n                if (errors !== null)\n                    errors.push(errCtx(path, `matched only ${pos} elements, ` +\n                        `but ${value.length} elements found`))\n                valid = false\n            }\n        }\n        return valid\n    },\n\n    /*  validate regular expression  */\n    exec_regexp (value, node, path, errors) {\n        let valid = node.regexp.test(value.toString())\n        if (!valid && errors !== null)\n            errors.push(errCtx(path, `value failed to match regular expression ${node.regexp.toString()}`))\n        return valid\n    },\n\n    /*  validate standard JavaScript type  */\n    exec_primary (value, node, path, errors) {\n        let valid = (node.name === \"null\" && value === null) || (typeof value === node.name)\n        if (!valid && errors !== null)\n            errors.push(errCtx(path, `found type \"${typeof value}\", expected primary type \"${node.name}\"`))\n        return valid\n    },\n\n    /*  validate custom JavaScript type  */\n    exec_class (value, node, path, errors) {\n        let type = registered(node.name)\n        let valid = (\n               typeof value === \"object\"\n            && (\n                  Object.prototype.toString.call(value) === \"[object \" + node.name + \"]\"\n               || (   typeof type === \"function\"\n                   && value instanceof type     )\n            )\n        )\n        if (!valid && errors !== null)\n            errors.push(errCtx(path, `found type \"${typeof value}\", expected class type \"${node.name}\"`))\n        return valid\n    }\n}\n\nexport { validate_execute }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { validate_tokenize } from \"./ducky-4-validate-1-tokenize.js\"\nimport { validate_parse    } from \"./ducky-4-validate-2-parse.js\"\nimport { validate_execute  } from \"./ducky-4-validate-3-execute.js\"\n\n/*  internal compile cache  */\nlet validate_cache = {}\n\n/*  API function: validate an arbitrary value against a validation DSL  */\nvar validate = function (value, spec, errors) {\n    /*  sanity check arguments  */\n    if (arguments.length < 2)\n        throw new Error(`validate: invalid number of arguments: ${arguments.length} (minimum of 2 expected)`)\n    else if (arguments.length > 3)\n        throw new Error(`validate: invalid number of arguments: ${arguments.length} (maximum of 3 expected)`)\n    if (typeof spec !== \"string\")\n        throw new Error(`validate: invalid specification argument: \"${spec}\" (string expected)`)\n\n    /*  compile validation AST from specification\n        or reuse cached pre-compiled validation AST  */\n    var ast = validate_cache[spec]\n    if (typeof ast === \"undefined\") {\n        ast = validate.compile(spec)\n        validate_cache[spec] = ast\n    }\n\n    /*  execute validation AST against the value  */\n    return validate.execute(value, ast, errors)\n}\n\nvalidate.compile = function (spec) {\n    /*  sanity check arguments  */\n    if (arguments.length !== 1)\n        throw new Error(`validate: invalid number of arguments: ${arguments.length} (exactly 1 expected)`)\n    if (typeof spec !== \"string\")\n        throw new Error(`validate: invalid specification argument: \"${spec}\" (string expected)`)\n\n    /*  tokenize the specification string into a token stream */\n    var token = validate_tokenize(spec)\n\n    /*  parse the token stream into an AST  */\n    var ast = validate_parse.parse(token)\n\n    return ast\n}\n\nvalidate.execute = function (value, ast, errors) {\n    /*  sanity check arguments  */\n    if (arguments.length < 2)\n        throw new Error(`validate: invalid number of arguments: ${arguments.length} (minimum of 2 expected)`)\n    else if (arguments.length > 3)\n        throw new Error(`validate: invalid number of arguments: ${arguments.length} (maximum of 3 expected)`)\n    if (arguments.length < 3 || typeof errors === \"undefined\")\n        errors = null\n\n    /*  execute validation AST against the value  */\n    return validate_execute.exec_spec(value, ast, \"\", errors)\n}\n\nexport { validate }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { validate } from \"./ducky-4-validate-4-api.js\"\n\n/*  determine or at least guess whether we were called with\n    positional or name-based parameters  */\nlet params_is_name_based = function (args, spec) {\n    let name_based = false\n    if (   args.length === 1\n        && typeof args[0] === \"object\") {\n        /*  ok, looks like a regular call like\n            \"foo({ foo: ..., bar: ...})\"  */\n        name_based = true\n\n        /*  ...but do not be mislead by a positional use like\n            \"foo(bar)\" where \"bar\" is an arbitrary object!  */\n        for (let name in args[0]) {\n            if (!Object.hasOwnProperty.call(args[0], name)) {\n                if (typeof spec[name] === \"undefined\")\n                    name_based = false\n            }\n        }\n    }\n    return name_based\n}\n\n/*  common value validity checking  */\nlet params_check_validity = function (func, param, value, valid, what) {\n    if (typeof valid === \"undefined\")\n        return\n    if (!validate(value, valid))\n        throw new Error(`${func}: parameter \"${param}\" has ` +\n            `${what} ${JSON.stringify(value)}, which does not validate against \"${valid}\"`)\n}\n\n/*  API function: flexible parameter handling  */\nvar params = function (func, args, spec) {\n    /*  start with a fresh parameter object  */\n    var params = {}\n\n    /*  handle parameter defaults  */\n    let name\n    for (name in spec) {\n        if (!Object.hasOwnProperty.call(spec, name))\n            continue\n        if (typeof spec[name].def !== \"undefined\") {\n            if (typeof spec[name].valid !== \"undefined\")\n                params_check_validity(func, name, spec[name].def, spec[name].valid, \"default value\")\n            params[name] = spec[name].def\n        }\n    }\n\n    /*  process parameters  */\n    if (params_is_name_based(args, spec)) {\n        args = args[0]\n\n        /*\n         *  case 1: name-based parameter specification\n         */\n\n        /*  pass 1: check for unknown but extra parameters  */\n        for (name in args) {\n            if (!Object.hasOwnProperty.call(args, name))\n                continue\n            if (typeof spec[name] === \"undefined\")\n                throw new Error(`${func}: unknown parameter \"${name}\"`)\n            params_check_validity(func, name, args[name], spec[name].valid, \"value\")\n            params[name] = args[name]\n        }\n\n        /*  pass 2: check for required but missing parameters  */\n        for (name in spec) {\n            if (!Object.hasOwnProperty.call(spec, name))\n                continue\n            if (   typeof spec[name].req !== \"undefined\"\n                && spec[name].req\n                && typeof args[name] === \"undefined\")\n                throw new Error(`${func}: required parameter \"${name}\" missing`)\n        }\n    }\n    else {\n        /*\n         *  case 2: positional parameter specification\n         */\n\n        /*  pass 1: determine number of positional and total required parameters\n            and the mapping from parameter position to parameter name  */\n        let positional = 0\n        let required = 0\n        let pos2name = {}\n        for (name in spec) {\n            if (!Object.hasOwnProperty.call(spec, name))\n                continue\n            if (typeof spec[name].pos !== \"undefined\") {\n                pos2name[spec[name].pos] = name\n                if (typeof spec[name].pos === \"number\")\n                    positional++\n                if (typeof spec[name].req !== \"undefined\" && spec[name].req)\n                    required++\n            }\n        }\n\n        /*  check for required parameters  */\n        if (args.length < required)\n            throw new Error(`${func}: invalid number of arguments (at least ${required} required)`)\n\n        /*  pass 2: process parameters in sequence  */\n        let i = 0\n        while (i < positional && i < args.length) {\n            params_check_validity(func, pos2name[i], args[i], spec[pos2name[i]].valid, \"value\")\n            params[pos2name[i]] = args[i]\n            i++\n        }\n        if (i < args.length) {\n            if (typeof pos2name[\"...\"] === \"undefined\")\n                throw new Error(`${func}: too many arguments provided`)\n            let rest = []\n            while (i < args.length)\n                rest.push(args[i++])\n            params_check_validity(func, pos2name[\"...\"], rest, spec[pos2name[\"...\"]].valid, \"value\")\n            params[pos2name[\"...\"]] = rest\n        }\n    }\n\n    /*  return prepared parameter object  */\n    return params\n}\n\nexport { params }\n\n","/*\n**  Ducky -- Duck-Typed Value Handling for JavaScript\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { select }   from \"./ducky-3-select-3-api.js\"\nimport { validate } from \"./ducky-4-validate-4-api.js\"\n\n/*  API function: flexible option handling  */\nvar options = function (spec, input) {\n    let output = {}\n\n    /*  prepare output by creating the structure and setting default values  */\n    let required = []\n    const prepare = (path) => {\n        /*  fetch and act on current value of specification  */\n        let val = select(spec, path.join(\".\"))\n        if (typeof val === \"object\" && !(val instanceof Array) && val !== null) {\n            /*  option structure  */\n            for (let name in val) {\n                if (!Object.hasOwnProperty.call(val, name))\n                    continue\n                prepare(path.concat(name)) /* RECURSION */\n            }\n        }\n        else if (typeof val === \"object\" && val instanceof Array && val !== null) {\n            /*  option element */\n            if (val.length < 0 || val.length > 2)\n                throw new Error(`options: invalid option specification at \"${path.join(\".\")}\" ` +\n                    \"(expected array of length 1 or 2)\")\n            if (typeof val[0] !== \"string\")\n                throw new Error(`options: invalid option specification at \"${path.join(\".\")}[0]\" ` +\n                    \"(expected type string)\")\n\n            /*  create parent structure in output  */\n            let out = output, i = 0\n            while (i < path.length - 1) {\n                if (typeof out[path[i]] !== \"object\")\n                    out[path[i]] = {}\n                out = out[path[i]]\n                i++\n            }\n\n            /*  handle value  */\n            if (val.length === 2) {\n                /*  handle default value  */\n                let errors = []\n                if (!validate(val[1], val[0], errors))\n                    throw new Error(`options: invalid option specification at \"${path.join(\".\")}\" ` +\n                        `(validation does not match default value): ${errors.join(\"; \")}`)\n                out[path[i]] = val[1]\n            }\n            else\n                required.push(path.join(\".\"))\n        }\n        else\n            throw new Error(`options: invalid option specification at \"${path}\" (expected object or array)`)\n    }\n    prepare([])\n\n    /*  provide merge function  */\n    let initially = true\n    let merge = function (input) {\n        /*  initially ensure that all required options are given in input  */\n        if (initially) {\n            initially = false\n            for (let i = 0; i < required.length; i++)\n                if (select(input, required[i]) === undefined)\n                    throw new Error(`options: required value for option \"${required[i]}\" missing`)\n        }\n\n        /*  merge values into output  */\n        const merge = (path, val) => {\n            let info = select(spec, path)\n            if (typeof info !== \"object\")\n                throw new Error(`options: value provided for unknown option \"${path}\" (invalid path)`)\n            if (!(info instanceof Array)) {\n                for (let name in val) {\n                    if (!Object.hasOwnProperty.call(val, name))\n                        continue\n                    merge(path === \"\" ? name : `${path}.${name}`, val[name]) /* RECURSION */\n                }\n            }\n            else {\n                let errors = []\n                if (!validate(val, info[0], errors))\n                    throw new Error(`options: invalid value for option \"${path}\": ${errors.join(\"; \")}`)\n                select(this, path, val)\n            }\n        }\n        merge(\"\", input)\n        return this\n    }\n\n    /*  attach merge function and optionally call it immediately  */\n    Object.defineProperty(output, \"merge\", {\n        configurable: false,\n        enumerable:   false,\n        writable:     false,\n        value:        merge\n    })\n    if (typeof input === \"object\" && input !== null)\n        output.merge(input)\n\n    /*  provide resulting option object  */\n    return output\n}\n\nexport { options }\n\n","/*!\r\n**  Ducky -- Duck-Typed Value Handling for JavaScript\r\n**  Copyright (c) 2010-2017 Ralf S. Engelschall <rse@engelschall.com>\r\n**\r\n**  Permission is hereby granted, free of charge, to any person obtaining\r\n**  a copy of this software and associated documentation files (the\r\n**  \"Software\"), to deal in the Software without restriction, including\r\n**  without limitation the rights to use, copy, modify, merge, publish,\r\n**  distribute, sublicense, and/or sell copies of the Software, and to\r\n**  permit persons to whom the Software is furnished to do so, subject to\r\n**  the following conditions:\r\n**\r\n**  The above copyright notice and this permission notice shall be included\r\n**  in all copies or substantial portions of the Software.\r\n**\r\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nimport { version              } from \"./ducky-0-version.js\"\r\nimport { register, unregister } from \"./ducky-2-registry-2-api.js\"\r\nimport { select               } from \"./ducky-3-select-3-api.js\"\r\nimport { validate             } from \"./ducky-4-validate-4-api.js\"\r\nimport { params               } from \"./ducky-5-params.js\"\r\nimport { options              } from \"./ducky-6-options.js\"\r\n\r\nmodule.exports = {\r\n    version,\r\n    register,\r\n    unregister,\r\n    select,\r\n    validate,\r\n    params,\r\n    options\r\n}\r\n\r\n"]}